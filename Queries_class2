Date functions
--------------------
#get the first day of the month
AddDate(last_day(subdate(day, interval 1 month)), 1);

#select name of an employee whose hire date is less than 01-feb-88
SELECT last_name, hire_date
FROM employees
WHERE hire_date < '01-FEB-88';

select sysdate();

select DATEDIFF('1995-09-01','1994-01-11');

select DATE_ADD('1995-09-01',interval 1 month);

select DATE_ADD('1995-09-01',interval 1 day);

select last_day('1995-09-01');

SELECT DAYNAME('2007-02-03'), DAYOFMONTH('2007-02-03'), DAYOFWEEK('2007-02-03'), DAYOFYEAR('2007-02-03');

select EXTRACT(YEAR FROM '2009-07-02');

SELECT EXTRACT(YEAR_MONTH FROM '2009-07-02 01:02:03');

#get_month_start_date_byindex

    subdate(
        LAST_DAY(
            DATE_ADD(dtDate, INTERVAL intMonthIndex MONTH)
        ), 
        INTERVAL DAY(
            LAST_DAY(
                DATE_ADD(dtDate, INTERVAL intMonthIndex MONTH)
            )
        )-1 DAY
    );

Date function
-------------------
CREATE DEFINER=`root`@`localhost` FUNCTION `get_month_start_date_byindex`(
    dtDate DATETIME,
    intMonthIndex INT
) RETURNS date
    DETERMINISTIC
BEGIN

RETURN
    DATE_SUB(
        LAST_DAY(
            DATE_ADD(dtDate, INTERVAL intMonthIndex MONTH)
        ), 
        INTERVAL DAY(
            LAST_DAY(
                DATE_ADD(dtDate, INTERVAL intMonthIndex MONTH)
            )
        )-1 DAY
    );

END



#get_month_end_date_byindex

LAST_DAY(
        DATE_ADD(dtDate, INTERVAL intMonthIndex MONTH)
    );


//Time AM/PM
select DATE_FORMAT('2017-04-18 04:00','%h:%i:%s %p');
select DATE_FORMAT('2017-04-18 05:00','%r');
select DATE_FORMAT('2017-04-18 16:00','%r');

//Time zone conversions

select DATE_FORMAT(CONVERT_TZ('2017-04-18 19:00', 'UTC', 'America/Los_Angeles'), '%m/%d/%Y');
select DATE_FORMAT(CONVERT_TZ('2017-04-18 19:00', 'UTC', 'Asia/Kolkata'), '%m/%d/%Y');

UTC - universal coordinated time or GMT - greenwich mean time

select utc_time();
select utc_date();
select utc_timestamp();

Implicit conversion
Select * from employees where salary=2400;

Or

Select * from employees where salary="2400";

Nesting functions
select upper(concat(substr(LAST_NAME, 1, 3), '-US')) as x
FROM employees
WHERE department_id = 60;

Ifnull
select salary, ifnull(commission_pct, 0), salary+(salary*ifnull(commission_pct, 0)) from employees;

If
select if(commission_pct, commission_pct, salary) from employees;

Nullif - like comparing, if equal then gives null
select nullif(length(first_name), length(last_name)) from employees;

Coalesce
select manager_id, commission_pct, salary, coalesce(manager_id, commission_pct, salary, -1) from employees;

CASE when then
SELECT last_name, job_id, salary,
(CASE job_id WHEN 'IT_PROG' THEN 1.10*salary
			WHEN 'ST_CLERK' THEN 1.15*salary
			WHEN 'SA_REP' THEN 1.20*salary
			ELSE salary END) as REVISED_SALARY 
FROM employees;

select max(salary), min(salary), avg(salary), sum(salary) from employees;

SELECT MIN(hire_date), MAX(hire_date) FROM employees;

SELECT COUNT(*)
FROM employees
WHERE department_id = 50;


Group by
-------------
#get total salary of employees based on departmentid
select department_id, sum(salary) from employees group by department_id;

#get max salary based on job id
select job_id, max(salary) from employees group by job_id;

#get sum of salary of employee under each department and each jobid within the department
SELECT department_id, job_id, SUM(salary)
FROM employees
GROUP BY department_id, job_id ;

#find avg salary of employees whose salary > 5000 under each department
Select avg(salary), department_id from employees where salary>5000 group by department_id;
